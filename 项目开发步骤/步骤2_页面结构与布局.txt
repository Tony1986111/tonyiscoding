# 步骤2：页面结构与布局

## 创建基础布局

1. 编辑 `src/app/layout.js` 文件，设置全局布局：
   ```jsx
   import './globals.css'
   
   export const metadata = {
     title: '你的名字 | 个人网站',
     description: '展示我的IT项目和博客的个人网站',
   }
   
   export default function RootLayout({ children }) {
     return (
       <html lang="zh">
         <body>
           {children}
         </body>
       </html>
     )
   }
   ```

## 创建可复用组件

1. 在 `src/components` 目录下创建以下组件：

   - `Navbar.jsx` - 导航栏组件
   - `Footer.jsx` - 页脚组件
   - `DarkModeToggle.jsx` - 暗黑模式切换按钮
   - `ProjectCard.jsx` - 项目卡片组件
   - `BlogPostCard.jsx` - 博客文章卡片组件

2. 从你的 `home.js` 文件中提取相应的代码到这些组件中，使它们可以在不同页面复用

## 创建主页

1. 修改 `src/app/page.js`，使用你的 `home.js` 内容，但将其拆分为更小的组件：
   ```jsx
   import Hero from '@/components/Hero'
   import Journey from '@/components/Journey'
   import Skills from '@/components/Skills'
   import Projects from '@/components/Projects'
   import Navbar from '@/components/Navbar'
   import Footer from '@/components/Footer'
   
   export default function Home() {
     return (
       <main>
         <Navbar />
         <Hero />
         <Journey />
         <Skills />
         <Projects />
         <Footer />
       </main>
     )
   }
   ```

## 创建其他页面

1. 创建项目页面 `src/app/projects/page.js`：
   ```jsx
   import Navbar from '@/components/Navbar'
   import Footer from '@/components/Footer'
   import ProjectCard from '@/components/ProjectCard'
   
   export default function Projects() {
     return (
       <div>
         <Navbar />
         <main className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
           <h1 className="text-3xl font-bold mb-8">我的项目</h1>
           <div className="grid md:grid-cols-2 gap-8">
             {/* 这里将展示你的项目 */}
           </div>
         </main>
         <Footer />
       </div>
     )
   }
   ```

2. 创建博客页面 `src/app/blog/page.js`：
   ```jsx
   import Navbar from '@/components/Navbar'
   import Footer from '@/components/Footer'
   import BlogPostCard from '@/components/BlogPostCard'
   
   export default function Blog() {
     return (
       <div>
         <Navbar />
         <main className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
           <h1 className="text-3xl font-bold mb-8">我的博客</h1>
           <div className="grid md:grid-cols-2 gap-8">
             {/* 这里将展示你的博客文章 */}
           </div>
         </main>
         <Footer />
       </div>
     )
   }
   ```

3. 创建联系页面 `src/app/contact/page.js`：
   ```jsx
   import Navbar from '@/components/Navbar'
   import Footer from '@/components/Footer'
   
   export default function Contact() {
     return (
       <div>
         <Navbar />
         <main className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
           <h1 className="text-3xl font-bold mb-8">联系我</h1>
           <form className="max-w-lg">
             {/* 联系表单 */}
             <div className="mb-4">
               <label className="block mb-2">姓名</label>
               <input type="text" className="w-full p-2 border rounded" />
             </div>
             <div className="mb-4">
               <label className="block mb-2">邮箱</label>
               <input type="email" className="w-full p-2 border rounded" />
             </div>
             <div className="mb-4">
               <label className="block mb-2">消息</label>
               <textarea className="w-full p-2 border rounded" rows="5"></textarea>
             </div>
             <button type="submit" className="px-4 py-2 bg-blue-500 text-white rounded">发送</button>
           </form>
         </main>
         <Footer />
       </div>
     )
   }
   ```

## 设置导航链接

1. 更新 `Navbar.jsx` 组件，确保导航链接指向正确的页面：
   ```jsx
   <a href="/">Home</a>
   <a href="/projects">Projects</a>
   <a href="/blog">Blog</a>
   <a href="/contact">Contact</a>
   ```

2. 在Next.js中，最好使用`Link`组件而不是`a`标签进行内部导航：
   ```jsx
   import Link from 'next/link'
   
   // 使用方式
   <Link href="/">Home</Link>
   ```

完成这些步骤后，你将拥有一个基本的多页面网站结构，包括主页、项目页、博客页和联系页。
