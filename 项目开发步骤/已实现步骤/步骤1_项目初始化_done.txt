# 步骤1：项目初始化

/*
已完成工作：
1. 创建了Next.js项目的基本目录结构（src/app, src/components, src/styles, src/lib, src/data）
2. 创建了package.json文件并安装了必要的依赖（next, react, react-dom, lucide-react, gray-matter, remark, remark-html）
3. 创建了基本的Next.js应用文件（layout.js, globals.css, page.js）
4. 配置了Tailwind CSS
5. 将原有的home.js内容移植到Next.js的页面结构中
*/

## 创建Next.js项目

1. 打开终端，进入你想要创建项目的目录
2. 运行以下命令创建一个新的Next.js项目：
   ```bash
   npx create-next-app@latest personal-website
   ```

3. 在安装过程中，会出现一些配置选项，建议选择：
   - 是否使用TypeScript？ → 否（初学者可以先用JavaScript）
   - 是否使用ESLint？ → 是
   - 是否使用Tailwind CSS？ → 是（你的设计已经使用了Tailwind）
   - 是否使用`src/`目录？ → 是
   - 是否使用App Router？ → 是（这是Next.js的新路由系统）
   - 是否自定义导入别名？ → 否（可以保持默认）

4. 进入项目目录：
   ```bash
   cd personal-website
   ```

## 安装必要的依赖

1. 安装你的设计中使用的Lucide图标库：
   ```bash
   npm install lucide-react
   ```

2. 如果你计划添加博客功能，可以安装Markdown处理库：
   ```bash
   npm install gray-matter remark remark-html
   ```

## 项目结构设置

1. 在`src`目录下创建以下文件夹结构：
   ```
   src/
   ├── app/             # 主应用目录（Next.js 13+ App Router）
   │   ├── page.js      # 主页
   │   ├── layout.js    # 全局布局
   │   ├── projects/    # 项目展示页面
   │   ├── blog/        # 博客页面
   │   └── contact/     # 联系页面
   ├── components/      # 可复用组件
   ├── styles/          # 全局样式
   ├── lib/             # 工具函数
   └── data/            # 静态数据（项目、博客文章等）
   ```

2. 将你的`home.js`文件内容移植到`src/app/page.js`中，并根据Next.js的App Router格式进行必要的调整

## 启动开发服务器

1. 运行以下命令启动开发服务器：
   ```bash
   npm run dev
   ```

2. 在浏览器中访问 http://localhost:3000 查看你的网站

完成这些步骤后，你将拥有一个基本的Next.js项目结构，可以开始构建你的个人网站了。
