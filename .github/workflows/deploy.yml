name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # 添加缓存功能来加速依赖安装
    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # 使用直接的SSH设置方式
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.DO_HOST }} >> ~/.ssh/known_hosts

    - name: Test SSH connection
      run: |
        echo "Testing SSH connection..."
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.DO_USERNAME }}@${{ secrets.DO_HOST }} 'echo "SSH connection successful"'

    - name: Deploy code to DigitalOcean
      run: |
        if ! rsync -avz -e "ssh -i ~/.ssh/id_rsa" ./ ${{ secrets.DO_USERNAME }}@${{ secrets.DO_HOST }}:/home/blog/; then
          echo "Failed to deploy code to server"
          exit 1
        fi
      # 添加错误处理
      continue-on-error: false

    - name: Build and restart application
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.DO_USERNAME }}@${{ secrets.DO_HOST }} 'cd /home/blog && {
          # 安装依赖
          if ! npm install; then
            echo "Failed to install dependencies"
            exit 1
          fi

          # 构建应用
          if ! npm run build; then
            echo "Failed to build application"
            exit 1
          fi

          # 使用PM2重启
          pm2 stop tonyiscoding-website || true

          if ! pm2 start npm --name "tonyiscoding-website" -- start; then
            echo "Failed to start application"
            exit 1
          fi

          pm2 save
        }'
      # 添加错误处理
      continue-on-error: false
